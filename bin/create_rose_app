#! /usr/bin/env bash

################################################################################
## This script converts namelists at the given from_vn to a Rose app at the
## given to_vn
################################################################################

################################################################################
# Get the "from version" argument
################################################################################
if [ $# -lt 2 ]; then
    echo "USAGE: create_rose_app from_vn to_vn"
    echo ""
    echo "    from_vn is the JULES version that the namelists are written for, e.g. vn3.4"
    echo "    to_vn is the JULES version to create the Rose app for, e.g. vn4.0"
    exit
fi
from_vn=$1
to_vn=$2


################################################################################
# Assume we are being run from inside a JULES installation
################################################################################
jules_dir=$(readlink -f ${0%/*}/..)


################################################################################
# Create app directories
################################################################################
echo "[INFO] Creating directories"

mkdir -p rose-suite/app/fcm_make/file
mkdir -p rose-suite/app/jules
mkdir -p rose-suite/meta


################################################################################
# Create suite level files
################################################################################
echo "[INFO] Creating suite files"

cat > rose-suite/rose-suite.info <<EOF
access-list=*
owner=$USER
project=JULES
title=JULES suite generated from $PWD
EOF

ROSE_SUITE_CONF=$(cat <<'EOF'
[jinja2:suite.rc]
BUILD_HOST='localhost'
COMPUTE_HOST='localhost'
EOF
)
echo "$ROSE_SUITE_CONF" > rose-suite/rose-suite.conf

SUITE_RC=$(cat <<'EOF'
#!jinja2
[cylc]
    UTC mode = True # Ignore DST
    [[event hooks]]
        timeout handler = rose suite-hook --mail --shutdown
        timeout = 4320  # 72 hours
[scheduling]
    [[dependencies]]
        graph = "fcm_make => jules"
[runtime]
    [[root]]
        command scripting = rose task-run --verbose
        [[[event hooks]]]
           succeeded handler = rose suite-hook
           failed handler = rose suite-hook --shutdown
           submission failed handler = rose suite-hook --shutdown
           submission timeout handler = rose suite-hook --mail
           execution timeout handler = rose suite-hook --mail
           submission timeout = 1440 # 24 hours
           execution timeout  =  180 # 3 hours
    [[linux]]
        [[[job submission]]]
            method = at
    [[fcm_make]]
        inherit = linux
        [[[remote]]]
            host = $(rose host-select {{ BUILD_HOST }})
        [[[environment]]]
            ROSE_TASK_N_JOBS = 4
    [[jules]]
        inherit = linux
        [[[remote]]]
            host = $(rose host-select {{ COMPUTE_HOST }})
        [[[environment]]]
            MPI_NUM_TASKS = 1
            OMP_NUM_THREADS = 1
            NPROC = $MPI_NUM_TASKS
EOF
)
echo "$SUITE_RC" > rose-suite/suite.rc


################################################################################
# Create metadata file
################################################################################
echo "[INFO] Creating metadata"

META_FILE=$(cat <<'EOF'
[jinja2:suite.rc]
ns = Hosts

[jinja2:suite.rc=BUILD_HOST]
compulsory = true
description = Host to use to extract and build the model
help =If using a working copy on a local disk, this should
     =be the machine with access to that disk.
ns = Hosts
sort-key = a 

[jinja2:suite.rc=COMPUTE_HOST]
compulsory = true
description = Host to use for model run
ns=Hosts
sort-key=b
EOF
)
echo "$META_FILE" > rose-suite/meta/rose-meta.conf


################################################################################
# Create fcm_make app
################################################################################
echo "[INFO] Creating fcm_make app"

FCM_MAKE_APP=$(cat <<'EOF'
meta=jules-fcm-make/vn4.0

[env]
JULES_BUILD=normal
JULES_COMPILER=gfortran
JULES_NETCDF=dummy
!!JULES_NETCDF_PATH=''
JULES_PARALLEL=serial
EOF
)
echo "$FCM_MAKE_APP" >> rose-suite/app/fcm_make/rose-app.conf
# Put the JULES_SOURCE line after as we want variable expansion to be active
echo "JULES_SOURCE=$jules_dir" >> rose-suite/app/fcm_make/rose-app.conf

FCM_MAKE_CFG=$(cat <<'EOF'
# Just include the FCM make file in the given JULES source directory
include = $JULES_SOURCE/etc/fcm-make/make.cfg
EOF
)
echo "$FCM_MAKE_CFG" > rose-suite/app/fcm_make/file/fcm-make.cfg

# Upgrade the fcm_make app to the latest available version
rose app-upgrade -a -y -q -M $jules_dir/rose-meta -C rose-suite/app/fcm_make $to_vn


################################################################################
# Create jules app
################################################################################
echo "[INFO] Creating jules app"

# First create the rose-app.conf file with some info that is not in the namelists
echo "meta=jules-standalone/$from_vn" > rose-suite/app/jules/rose-app.conf
echo "" >> rose-suite/app/jules/rose-app.conf
JULES_APP=$(cat <<'EOF'
[command]
default=rose-jules-run
EOF
)
echo "${JULES_APP}" >> rose-suite/app/jules/rose-app.conf
echo "" >> rose-suite/app/jules/rose-app.conf

# Modify the namelist files to replace shorthand T and F with .true. and .false.
find . -name '*.nml' -exec sed -i -r -e 's/([= ])F([ ,])/\1.false.\2/g' \
                                     -e 's/([= ])F([ ,])/\1.false.\2/g' \
                                     -e 's/([= ])F$/\1.false./g'        \
                                     -e 's/([= ])T([ ,])/\1.true.\2/g'  \
                                     -e 's/([= ])T([ ,])/\1.true.\2/g'  \
                                     -e 's/([= ])T$/\1.true./g' {} +

# Then append the rest of the output from rose-namelist-dump
rose namelist-dump -l *.nml >> rose-suite/app/jules/rose-app.conf

# Upgrade the jules app to the given version
rose app-upgrade -a -y -q -M $jules_dir/rose-meta -C rose-suite/app/jules $to_vn

# Rewrite the file sources to make sure all the optional/multi-occurence namelists are correct
ed rose-suite/app/jules/rose-app.conf > /dev/null 2>&1 <<EOF
/\[file\:ancillaries\.nml\]/
+
c
source=namelist:jules_frac namelist:jules_soil_props (namelist:jules_top) namelist:jules_agric (namelist:jules_crop_props) (namelist:jules_irrig) (namelist:jules_rivers_props) namelist:jules_co2
.
/\[file\:crop_params\.nml\]/
+
c
source=(namelist:jules_cropparm)
.
/\[file\:drive\.nml\]/
+
c
source=namelist:jules_drive
.
/\[file\:imogen\.nml\]/
+
c
source=(namelist:imogen_run_list) (namelist:imogen_anlg_vals_list)
.
/\[file\:initial_conditions\.nml\]/
+
c
source=namelist:jules_initial
.
/\[file\:jules_hydrology\.nml\]/
+
c
source=namelist:jules_hydrology
.
/\[file\:jules_radiation\.nml\]/
+
c
source=namelist:jules_radiation
.
/\[file\:jules_rivers\.nml\]/
+
c
source=namelist:jules_rivers
.
/\[file\:jules_snow\.nml\]/
+
c
source=namelist:jules_snow
.
/\[file\:jules_soil\.nml\]/
+
c
source=namelist:jules_soil
.
/\[file\:jules_surface\.nml\]/
+
c
source=namelist:jules_surface
.
/\[file\:jules_surface_types\.nml\]/
+
c
source=namelist:jules_surface_types
.
/\[file\:jules_vegetation\.nml\]/
+
c
source=namelist:jules_vegetation
.
/\[file\:model_grid\.nml\]/
+
c
source=namelist:jules_input_grid namelist:jules_latlon namelist:jules_land_frac namelist:jules_model_grid namelist:jules_surf_hgt
.
/\[file\:nveg_params\.nml\]/
+
c
source=namelist:jules_nvegparm
.
/\[file\:output\.nml\]/
+
c
source=namelist:jules_output (namelist:jules_output_profile(:))
.
/\[file\:pft_params\.nml\]/
+
c
source=namelist:jules_pftparm
.
/\[file\:prescribed_data\.nml\]/
+
c
source=namelist:jules_prescribed (namelist:jules_prescribed_dataset(:))
.
/\[file\:timesteps\.nml\]/
+
c
source=namelist:jules_time namelist:jules_spinup
.
/\[file\:triffid_params\.nml\]/
+
c
source=namelist:jules_triffid
.
/\[file\:urban\.nml\]/
+
c
source=(namelist:urban_switches) (namelist:urban2t_param) (namelist:urban_properties)
.
w
q
EOF

# Run the fixer macros to set up triggers etc.
rose macro -y -q -M $jules_dir/rose-meta -C rose-suite/app/jules --fix

echo "[DONE]"
