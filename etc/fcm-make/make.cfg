################################################################################
################################################################################
## This configuration file is used to build JULES from the source containing it
################################################################################
################################################################################


################################################################################
# Use environment variables to control the configuration via include files
################################################################################
# These are the variables we eventually need to set
$compiler = 
$extract_path_incl = bin includes src utils/drhook_dummy
$fpp_defs = SCMA BL_DIAG_HACK
$fflags = 
$ldflags = 
$external_mods = 
$external_libs = 
$inc_paths = 
$lib_paths = 

# Load the environment variables that control the build
$JULES_PLATFORM{?}        = custom
$JULES_REMOTE{?}          = local
$JULES_REMOTE_HOST{?}     = 
$JULES_REMOTE_PATH{?}     = 
$JULES_COMPILER{?}        = gfortran
$JULES_BUILD{?}           = normal
$JULES_OMP{?}             = noomp
$JULES_MPI{?}             = nompi
$JULES_NETCDF{?}          = nonetcdf
$JULES_NETCDF_PATH{?}     = /path/to/netcdf
$JULES_NETCDF_INC_PATH{?} = $JULES_NETCDF_PATH/include
$JULES_NETCDF_LIB_PATH{?} = $JULES_NETCDF_PATH/lib
$JULES_FFLAGS_EXTRA{?}    = 
$JULES_LDFLAGS_EXTRA{?}   = 

# Load the platform file
# The platform file includes other files, but can also control any platform
# specific overrides
include = $HERE/platform/$JULES_PLATFORM.cfg


################################################################################
# Configure the extract step
################################################################################
extract.ns = jules

# The location is the root JULES directory
extract.location[jules] = $HERE/../..

# We want to ignore UM specific things (and routing for now)
extract.path-excl[jules] = / src/control/um src/initialisation/um      \
                           src/science/snow/snow_intctl.F90            \
                           src/science/surface/flake_interface.F90     \
                           src/params/um                               \
                           src/science/river_routing/um


################################################################################
# Configure the preprocess step
################################################################################
preprocess.target{category} = include src
preprocess.target{task} = install process
preprocess.prop{file-ext.h} = .h .inc


################################################################################
# Configure the build step
################################################################################
# Build options that are the same for every configuration
build.target = rose-jules-run jules.exe

# Explicit dependencies that need to be defined
build.prop{ns-dep.o}[jules/src/control/standalone/jules.F90] = jules/src/initialisation/standalone \
                                                               jules/src/science                   \
                                                               jules/src/control/imogen            \
                                                               jules/utils
build.prop{dep.o}[jules/src/control/standalone/jules.F90] = control.o next_time.o


################################################################################
# Copy config variables into actual build properties
################################################################################
build.prop{fc}               = $compiler
extract.path-incl[jules]     = $extract_path_incl
preprocess.prop{fpp.defs}    = $fpp_defs 
build.prop{fc.flags}         = $fflags $JULES_FFLAGS_EXTRA
build.prop{fc.flags-ld}      = $ldflags $JULES_LDFLAGS_EXTRA
build.prop{fc.defs}          = $fpp_defs
build.prop{no-dep.f.module}  = $external_mods
build.prop{fc.libs}          = $external_libs
build.prop{fc.include-paths} = $inc_paths
build.prop{fc.lib-paths}     = $lib_paths
